generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                 Int                  @id @default(autoincrement())
  email              String               @unique
  role               Role                 @default(STUDENT)
  name               String               @db.VarChar(150)
  password           String               @db.VarChar(60)
  active             Boolean              @default(true)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  classroom          classroom[]
  registration       registration[]
  user_reapplication user_reapplication[]
}

model registration {
  id                     Int      @id @default(autoincrement())
  avatar_url             String?
  birthday               DateTime
  cpf                    String?  @db.VarChar(11)
  sex                    Int      @db.SmallInt
  color_race             Int      @db.SmallInt
  deficiency             Boolean
  deficiency_description String?  @db.Text
  responsable_name       String?  @db.VarChar(90)
  responsable_cpf        String?  @db.VarChar(11)
  responsable_telephone  String?  @db.VarChar(11)
  zone                   Int      @db.SmallInt
  kinship                Kinship? @default(NAO_DEFINIDO)
  kinship_description    String?  @db.Text
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  user_fk                Int
  user                   users    @relation(fields: [user_fk], references: [id])
}

model user_reapplication {
  id               Int            @id @default(autoincrement())
  user_fk          Int?
  reapplication    reapplication? @relation(fields: [reapplication_fk], references: [id])
  reapplication_fk Int?
  users            users?         @relation(fields: [user_fk], references: [id])
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}

model reapplication {
  id                 Int                  @id @default(autoincrement())
  name               String               @db.VarChar(150)
  active             Boolean              @default(true)
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  classrooms         classroom[]
  user_reapplication user_reapplication[]
}

model classroom {
  id               Int            @id @default(autoincrement())
  name             String
  owner_user_fk    Int
  reapplication_fk Int
  active           Boolean        @default(true)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  user             users[]
  reapplication    reapplication? @relation(fields: [reapplication_fk], references: [id])
}

enum Role {
  ADMIN
  STUDENT
  TEACHER
}

enum Kinship {
  PAI
  MAE
  AVO_A
  TIO_A
  IRMAO_A
  PRIMO_A
  OUTRO
  NAO_PARENTE
  NAO_DEFINIDO
}
